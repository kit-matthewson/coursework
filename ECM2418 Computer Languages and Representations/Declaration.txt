I acknowledge the use of Gemini (GenAI) to generate materials that I have adapted to include within my final assessment. I confirm that no content generated by AI has been presented as my own work.

In prime.pl:
Prompt: "Generate a Prolog predicate letters(M, N) that is true if M is the number of the month of the year that has N letters."
letters(1,  9).  % January
letters(2,  8).  % February
letters(3, 10).  % March
letters(4,  8).  % April
letters(5, 11).  % May
letters(6,  8).  % June
letters(7,  9).  % July
letters(8,  6).  % August
letters(9, 10).  % September
letters(10, 9).  % October
letters(11, 9).  % November
letters(12, 10). % December

This then had to be corrected to:
letters(1, 7).  % January
letters(2, 8).  % February
letters(3, 5).  % March
letters(4, 5).  % April
letters(5, 3).  % May
letters(6, 4).  % June
letters(7, 4).  % July
letters(8, 6).  % August
letters(9, 9).  % Septembe
letters(10, 7)  % October
letters(11, 8)  % November
letters(12, 8)  % December

Prompt: "Generate a Prolog predicate month_length(M, D) that is true when D is the number of days in month M"
month_length(M, D) :-
    member(M, [1, 3, 5, 7, 8, 10, 12]),
    D is 31.
month_length(M, D) :-
    member(M, [4, 6, 9, 11]),
    D is 30.
month_length(2, D) :-
    D is 28.

I then added the case for leap years:
month_length(2, D) :-
    D is 29.

In Bilateral.pl:
Prompt: "Suggest a builtin Prolog function that can convert an integer to a list of digits."
number_codes(Number, DigitCodes).
